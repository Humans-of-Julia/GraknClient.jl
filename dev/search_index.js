var documenterSearchIndex = {"docs":
[{"location":"guide/","page":"User Guide","title":"User Guide","text":"CurrentModule = GraknClient","category":"page"},{"location":"guide/#User-Guide","page":"User Guide","title":"User Guide","text":"","category":"section"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"This is just a preview yet","category":"page"},{"location":"guide/#Installation","page":"User Guide","title":"Installation","text":"","category":"section"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"To use this client, you need a compatible Grakn Server running. Visit the Compatibility Table ","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"This pkg is not yet registered on the JuliaHub. As of now you would need to install it directly from the GitHub repo.","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"Inside the Julia REPL, type ] to enter the Pkg REPL mode then run","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"pkg> dev https://github.com/Humans-of-Julia/GraknClient.jl","category":"page"},{"location":"guide/#Quickstart","page":"User Guide","title":"Quickstart","text":"","category":"section"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"First make sure, the Grakn server is running.","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"In the Julia REPL or in your source run ","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"using GraknCLient","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"Instantiate a client and open a session.","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"using GraknClient\n\nto be worked out yet..","category":"page"},{"location":"guide/","page":"User Guide","title":"User Guide","text":"Modules = [GraknClient]","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"CurrentModule = GraknClient","category":"page"},{"location":"api/#API-reference-to-be-filled","page":"API Reference","title":"API reference to be filled","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"CurrentModule = GraknClient","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/#Introduction","page":"Contributing","title":"Introduction","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"So, Grakn itself provides various ways how to communicate (read from & write to) the database.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"There is the Workbase the Grakn Console and the different Clients to be used in an application. ","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"There are clients for the following languages: Java, Node.js and Python. But there is no Julia client yet.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"We are going to build the Julia client here.","category":"page"},{"location":"contributing/#Workflow-guidance-and-roadmap","page":"Contributing","title":"Workflow guidance & roadmap","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"As there will be a major change in the underlying technology of Grakn with the Version 2.0 in a not too far future, we cannot directly start to translate anything we find in the other Clients.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"For now our reference client is the Python version, which can be found also in the GitHub repo of this project.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"However, there are some design guidelines on how to roll an own client here and an introductiory write up on how to start here.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Both of these sources will be updated once Grakn 2.0 will be out, so they can currently only serve as a first introduction to get an idea.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"As we will receive updates about the project status of Grakn 2.0, we can move on with the translation.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The roadmap for 2.0 compatible clients is as follows (08.11.2020):","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"client-java (soon to be released) \nclient-nodejs (next couple of weeks)\nclient python (early december)","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"With a stable client as a reference, we can then start implementing things.","category":"page"},{"location":"contributing/#Dependencies","page":"Contributing","title":"Dependencies","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The Python client itself does not depend on a lot of external libraries:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Protobuf\ngRPC\nsix","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"All other logic is inside the client itself and protobuf and gRPC are used for the connection to the Grakn Server.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"That's why these .proto files need to be translated into Julia to make the connection work.","category":"page"},{"location":"contributing/#How-to-start","page":"Contributing","title":"How to start","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Grakn suggested to start translating the Concept API.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can read about it in the Grakn documentation here ","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"It is about these files in the repo","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"After we got that, it is adviced to wait for the Python Client 2.0, so we can plan things out.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"For further questions about how to start, find us on Discord.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Feel free to create branches, pull requests, issues and all that is required.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Have Fun!","category":"page"},{"location":"contributing/#Project-status","page":"Contributing","title":"Project status","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The current project status can be seen on the GitHub Project Kanban","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You can hopefully soon find open issues that need help as well.","category":"page"},{"location":"contributing/#Useful-sources","page":"Contributing","title":"Useful sources","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"How I translate Python code into Julia code\nPython to Julia Quick translation / conversion reference Guide\nClient-Python tests\nProtobuf\ngRPC\ngRPC implementation introduction\nOOPMacro.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Modules = [GraknClient]","category":"page"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"CurrentModule = GraknClient","category":"page"},{"location":"changelog/#Changelog","page":"Changelog","title":"Changelog","text":"","category":"section"},{"location":"changelog/#lets-list-em-here","page":"Changelog","title":"lets list em here","text":"","category":"section"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"","category":"page"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"08.11.2020","category":"page"},{"location":"changelog/","page":"Changelog","title":"Changelog","text":"created project logo\nset up initial docs and guidelines","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = GraknClient","category":"page"},{"location":"#Documentation","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"#About","page":"Home","title":"About","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is a community approach to translate a given client interface to the knowledge graph database Grakn made by Grakn.ai into Julia Language.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Starting out as an educational project and to benefit the Julia ecosystem.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Please review the user guide or if you'd like to help building this the contribution guidlines.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Feel free to join the project channel on the Discord server, and take over a part in translating the given client reference into Julia.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Grakn is the knowledge graph engine to organise complex networks of data and making it queryable, by performing knowledge engineering.  Rooted in Knowledge Representation and Automated Reasoning, Grakn provides the knowledge foundation for cognitive and intelligent (e.g. AI) systems, by providing an intelligent language for modelling, transactions and analytics. Being a distributed database, Grakn is designed to scale over a network of computers through partitioning and replication.","category":"page"},{"location":"#Highlights-of-Grakn","page":"Home","title":"Highlights of Grakn","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Entity-RelationshipGrakn allows you to model your domain using the well-known Entity-Relationship model at its full expressivity. \nIt is composed of entity types, relationship types, and attribute types.\nUnlike other modelling languages, Grakn allows you to define type hierarchies, hyper-entities, hyper-relations, and rules to build rich knowledge models.   TypesGrakn provides to easily and quickly model type inheritance into the knowledge model. \nFollowing the object-oriented principle, this allows data types to inherit the behaviour and properties of their parent.\nLike functions in programming, rules can chain themselves to one another, creating abstractions of behaviour at the data level.   RulesGrakn allows you to define rules in your knowledge schema, which extends the expressivity of your model. \nIt enables the system to derive new conclusions when a certain logical form in your dataset is satisfied.\nLike functions in programming, that rules can chain itself to another, creating abstractions of behaviour at the data level.   InferenceGrakn's inference facility translates one query into all of its other interpretations. \nThis happens through two mechanisms: type-based and rule-based inference.\nNot only does this derive new conclusions and uncovers relationships that would otherwise be hidden, but it also enables the abstraction of complex patterns into simple queries.   AnalyticsDistributed analytics is a set of scalable algorithms that allows you to perform computation over large amounts of data in a distributed fashion. \nThey tend to belong to the family of MapReduce or Pregel algorithms (BSP). Often, this requires the implementation of challenging algorithms.\nIn Grakn, these distributed analytics algorithms are built-in as native functionalities of the language.   ","category":"page"},{"location":"#Credits","page":"Home","title":"Credits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Credits go to the Humans of Julia organisation and the Grakn team. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you like to have a chat, you can find the Humans of Julia on Discord here.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Also if you like to join the Grakn community, you can find them on Discord as well here.","category":"page"},{"location":"#Licence","page":"Home","title":"Licence","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"GraknClient.jl is licensed under the MIT.  For more details click here","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [GraknClient]","category":"page"}]
}
